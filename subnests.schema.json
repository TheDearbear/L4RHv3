{
    "$schema": "http://json-schema.org/draft/2020-12/schema",
    "title": "Subnests file",
    "type": "object",
    "properties": {
        "header": {
            "description": "Metadata section",
            "type": "object",
            "additionalProperties": true,
            "properties": {
                "name": {
                    "description": "Non-localizable name of subnests file",
                    "type": "string"
                },
                "description": {
                    "description": "Non-localizable description of subnests file",
                    "type": "string"
                },
                "subnests_version": {
                    "description": "Version of subnests file",
                    "type": "number",
                    "minimum": 0,
                    "multipleOf": 0.01
                },
                "use_localization": {
                    "description": "Translate descriptions of chunks using translation file",
                    "type": "boolean"
                }
            },
            "required": [
                "name",
                "subnests_version"
            ]
        },
        "subnests": {
            "description": "Documentation section",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^0x[0-9A-F]{8}$": {
                    "type": "object",
                    "properties": {
                        "description_entry": {
                            "description": "User visible description of chunk",
                            "type": "string"
                        },
                        "ignore": {
                            "description": "Program should ignore this chunk when disassembling file",
                            "type": "boolean"
                        },
                        "align": {
                            "description": "Program should validate align of chunk when disassembling file and align it when assembling",
                            "type": "integer",
                            "minimum": 0
                        },
                        "data_align": {
                            "description": "Program should skip start of data until it is aligned when disassembling file and append it when assembling",
                            "type": "integer",
                            "minimum": 0
                        },
                        "schema": {
                            "description": "Schema of chunk's data for disassembling/assembling",
                            "type": "object",
                            "patternProperties": {
                                "...": { "$ref": "#/$defs/subnest_field" }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            }
        }
    },
    "required": [
        "header",
        "subnests"
    ],
    "additionalProperties": true,
    "$defs": {
        "subnest_field": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "Base type of field",
                    "type": "string",
                    "enum": [
                        "int8",
                        "int16",
                        "int32",
                        "int64",
                        "float",
                        "double",
                        "pointer",
                        "structure"
                    ]
                },
                "endian": {
                    "description": "Endiannes of field",
                    "type": "string",
                    "enum": [
                        "little",
                        "big"
                    ]
                },
                "unsigned": {
                    "description": "Field should be interpreted as unsigned",
                    "type": "boolean"
                },
                "modifier": {
                    "description": "Additional modifier for field types that support it",
                    "type": "string",
                    "enum": [
                        "array",
                        "string",
                        "padding"
                    ]
                },
                "structure": {
                    "description": "Schema for structure",
                    "type": "object",
                    "patternProperties": {
                        "...": {
                            "$ref": "#/$defs/subnest_field"
                        }
                    }
                },
                "length": {
                    "description": "Defines length of array/string/padding by fixed size or Context Inline Script expression",
                    "oneOf": [
                        {
                            "type": "integer",
                            "minimum": 1
                        },
                        {
                            "type": "string"
                        }
                    ]
                }
            },
            "required": [
                "type",
                "endian",
                "unsigned"
            ]
        }
    }
}
